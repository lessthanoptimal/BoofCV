// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.library' version '7.2.2'
    id 'org.jetbrains.kotlin.android' version '1.7.20'
}
apply plugin: 'maven-publish'

android {
    namespace "${project.group}.android.ibrary"
    compileSdk 33

    defaultConfig {
        minSdk 22 // Depends on which API you use
        targetSdk 33
        versionCode 1 // Not sure if I really need to update to use this or not
        versionName "$project.version"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions { jvmTarget = '11' }
}

repositories {
    google()
    mavenCentral()
    mavenLocal()
}

configurations.configureEach {
    resolutionStrategy {
        force "org.jetbrains:annotations:$project.jetnull_version"
    }
}

dependencies {
    api project(':main:boofcv-ip')
    api project(':main:boofcv-feature')
    api project(':main:boofcv-geo')

    def fragment_version = "2.5.3"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.navigation:navigation-fragment-ktx:$fragment_version"
    implementation "androidx.navigation:navigation-ui-ktx:$fragment_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    compileOnly "org.jetbrains:annotations:$project.jetnull_version" // @Nullable

    compileOnly 'com.android.support:support-annotations:27.1.1'

    annotationProcessor("com.github.bsideup.jabel:jabel-javac-plugin:${project.jabel_version}")
}

afterEvaluate {
    android.libraryVariants.each { variant ->
        // Only publish the release variant
        if (variant.name != "release")
            return

        // if Maven central isn't setup in ~/.gradle/gradle.properties fill in these variables to make it happy
        if (!project.hasProperty('ossrhUsername')) {
            ext.ossrhUsername = "dummy"
            ext.ossrhPassword = "dummy"
        }

        publishing {
            publications.create(variant.name, MavenPublication) {
                from components.findByName(variant.name)

                groupId "$project.group"
                artifactId = project.name
                version "$project.version"

                pom {
                    name = 'BoofCV'
                    description = 'BoofCV is an open source Java library for real-time computer vision and robotics applications.'
                    url = 'https://boofcv.org'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'pabeles'
                            name = 'Peter Abeles'
                            email = 'peter.abeles@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/lessthanoptimal/BoofCV.git'
                        developerConnection = 'scm:git:git://github.com/lessthanoptimal/BoofCV.git'
                        url = 'https://github.com/lessthanoptimal/BoofCV'
                    }
                }
            }
            repositories {
                maven {
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username ossrhUsername
                        password ossrhPassword
                    }
                }
            }

        }
    }
}


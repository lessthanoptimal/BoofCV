// TODO insert analytics and adsense into javadoc

ext.libpath = file('./').absolutePath

allprojects {
    apply plugin: 'idea'

    group = 'org.boofcv'
    version = '0.17-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'osgi'
    apply plugin: 'maven'
    apply plugin: 'signing'

    sourceCompatibility = 1.6

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src'
            }
            resources {
                srcDir 'resources/src'
            }
        }

        test {
            java {
                srcDir 'test'
                srcDir 'generate'
                srcDir 'benchmark'
            }
            resources {
                srcDir 'resources/test'
            }
        }
    }

    dependencies {
//        compile files("$libpath/lib/EJML.jar")
//        compile files("$libpath/lib/DDogleg.jar")
//        compile files("$libpath/lib/GeoRegression.jar")

        compile group: 'com.googlecode.efficient-java-matrix-library', name: 'ejml', version: '0.25-SNAPSHOT'
        compile group: 'org.ddogleg', name: 'ddogleg', version: '0.5-SNAPSHOT'
        compile group: 'org.georegression', name: 'georegression', version: '0.6-SNAPSHOT'

        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile files("$libpath/lib/testing/caliper.jar")
//        testCompile group: 'com.google.caliper', name: 'caliper', version: '1.0-beta-1'
    }

    jar {
        manifest { // the manifest of the default jar is of type OsgiManifest
            instruction 'Bundle-Vendor', 'BoofCV'
//            instruction 'Bundle-Description', 'BoofCV'
            instruction 'Bundle-DocURL', 'http://boofcv.org'
        }
    }

    // if Maven central isn't setup in gradle.properties skip all of this
    if( hasProperty('ossrhUsername') ) {
        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }

        signing {
            sign configurations.archives
        }

        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    pom.project {
                        name 'BoofCV'
                        packaging 'pom'
                        // optionally artifactId can be defined here
                        description 'BoofCV is an open source Java library for real-time computer vision and robotics applications.'
                        url 'http://boofcv.org'

                        scm {
                            connection 'scm:git:git://github.com/lessthanoptimal/BoofCV.git'
                            developerConnection 'scm:git:git://github.com/lessthanoptimal/BoofCV.git'
                            url 'https://github.com/lessthanoptimal/BoofCV'
                        }

                        licenses {
                            license {
                                name 'The Apache Software License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }

                        developers {
                            developer {
                                id 'pabeles'
                                name 'Peter Abeles'
                                email 'peter.abeles@gmail.com'
                            }
                        }
                    }
                }
            }
        }
    }
}

def javadocProjects= [
        ':main:ip',
        ':main:io',
        ':main:feature',
        ':main:geo',
        ':main:calibration',
        ':main:sfm',
        ':main:recognition',
        ':main:visualize',
        ':main:checks',

        ':integration:xuggler',
        ':integration:openkinect',
]

try {
    project(':integration:android')
    javadocProjects.add(':integration:android')
} catch( UnknownProjectException ignore ) {}
try {
    project(':integration:v4l4j')
    javadocProjects.add(':integration:v4l4j')
} catch( UnknownProjectException ignore ) {}

task alljavadoc(type: Javadoc) {
    // only include source code in src directory to avoid including 3rd party code which some projects do as a hack
    source = javadocProjects.collect { project(it).fileTree('src').include('**/*.java') }
//    source = javadocProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(javadocProjects.collect { project(it).sourceSets.main.compileClasspath })

    destinationDir = file("${buildDir}/docs/javadoc")
    configure(options) {
        docTitle = "BoofCV JavaDoc ($project.version)"
        links = [ 'http://docs.oracle.com/javase/7/docs/api/',
                  'http://georegression.org/javadoc/',
                  'http://ddogleg.org/javadoc/']
//        header = file('misc/header.txt').text.replace("\n", "")
//        bottom = file('misc/bottom.txt').text.replace("\n", "")
    }
}

idea {
    project {
        jdkName = '1.6 (64bit)'
        languageLevel = '1.6'
    }
}

// Disable the creation of jars for distribution.  If you don't do this it will crash
[':main',':evaluation',':examples',':main:checks','integration'].each {String a ->
    project(a) {
        if( hasProperty('ossrhUsername') ) {
            signArchives.enabled = false
            jar.enabled = false
            uploadArchives.enabled = false
            sourcesJar.enabled = false
            javadocJar.enabled = false
        }
    }
}


